plugins {
    id 'scala'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.scala-lang:scala-library:2.13.8'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.scala-lang:scala-reflect:2.13.8'
    implementation project(path: ':app', configuration: 'default')
}

application {
    mainClass = 'core.Veritas'
}

task runTests {
    dependsOn(":app:build")
    finalizedBy("run")
}


task runCoverage(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    getMainClass().set("core.Veritas")

    // If `extraArgs` exists, prepend it with "coverage" and set args to the result
    // else just set args to "coverage"
    if (project.hasProperty("extraArgs")) {
        args(["coverage"] + (extraArgs.split(',') as List).flatten())
    } else {
        args("coverage")
    }
}